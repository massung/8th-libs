\ -*- 8th -*-

\ -------------------
\ Global utils
\ -------------------

ns: G

\ -------------------
\ String utils
\ -------------------

ns: s

-- w: s:empty?
-- s: s -- s false | true
-- d: Drop and true if the string is empty, otherwise false.

: empty? \ s -- s false | true
    s:len 0 > if false else drop true then ;

\ -------------------
\ Array utils
\ -------------------

ns: a

-- w: a:iota
-- s: n -- a
-- d: Returns an array of number in the range [0,n).

: iota \ n -- a
    >r a:new ( a:len a:push ) r> times ;

-- w: a:take
-- s: a n -- a' a2
-- d: Shifts out n items from a and returns them as a new array (a2).

: take \ a n -- a' a2
    2dup 0 swap a:slice >r -1 a:slice r> ;

-- w: a:every
-- s: a w -- a T
-- d: The same as a:each! except that word is expected to be a predicate
-- d: that leaves a boolean on the stack. Iteration stops as soon as false
-- d: is returned. If all pass, then true is returned.

: every \ a w -- a T
    >r ( swap r@ w:exec and dup if; break ) true a:reduce rdrop ;

-- w: a:some
-- s: a w -- a T
-- d: Similar to a:every except returns true as soon as any of the arguments
-- d: in the array pass the predicate.

: some \ a w -- a T
    >r ( swap r@ w:exec or dup if break then ) false a:reduce rdrop ;

\ -------------------
\ Map utils
\ -------------------

ns: m

\ -------------------
\ File utils
\ -------------------

ns: f

-- w: f:homedir
-- s: -- s
-- d: Returns the user's home directory (~/).

: homedir \ -- s
    "HOME" getenv null? if "USERPROFILE" getenv nip then ;

-- w: f:homefile
-- s: s -- s
-- d: Returns a file in the home directory. s -> ~/s

: homefile \ s -- s
    homedir f:sep s:+ "%s%s" s:strfmt ;

-- w: f:spit
-- s: x s --
-- d: Writes the item x to a new file (by filename) s.

: spit \ x s --
    f:create swap f:write drop f:close ;
